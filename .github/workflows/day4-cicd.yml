#create pipeline with some name
name: shahin app containerization pipeline
# trigger-- when this pipeline should start
on:
  push:
    branches:
      - "dev"
#jobs we want to perform
jobs:
  shahin-image-build:
    runs-on: ubuntu-latest
    # this is the runner which provisioned by github backend for this job
    steps:
      - name: run some basic commands on above server to do some verification
        run: |
          uname -r 
          whoami
          cat /etc/os-release
          docker version
          docker-compose version
      - name: using pre-defined github workflow to copy gitrepo to runners machien
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        with:
          projectBaseDir: ./python-app-secret
          args: >
            -Dsonar.projectKey=shahin-sonar-project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
      - name: verify github code and use docker compose to build and create
        run: |
          ls -a
          cd python-app-secret
          docker-compose up -d
          sleep 2
          docker-compose ps 
          sleep 1
          docker-compose logs   

      - name: Build an image from Dockerfile
        run: |
          cd python-app-secret
          docker build -t shahinpy:bmov${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'shahinpy:bmov${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: push image to docker hub
        run: |
          docker login --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}
          docker tag shahinpy:bmov${{ github.sha }} docker.io/shahin24093/shahinpy:bmov${{ github.sha }}
          docker push docker.io/shahin24093/shahinpy:bmov${{ github.sha }}
          docker logout

      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # - run: npm ci
      # - run: npm test

      - run: |
          node --version
          cd ecs 
          npm install

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: cdk deploy
        run: |
          cd ecs 
          npx cdk bootstrap
          npx cdk deploy --no-rollback --require-approval never 
